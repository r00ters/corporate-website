name: Deploy to staging

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: .

      - name: Generate robots.txt (disallow all)
        run: |
          mkdir -p public
          cat > public/robots.txt <<EOL
          User-agent: *
          Disallow: /
          EOL

      - name: Generate .nojekyll (without it GitHub pages do not serve _* files)
        run: |
          touch .nojekyll

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install project dependencies
        run: npm install

      - name: Build Next.js (static export)
        run: |
          npm run build

      - name: Verify static output
        run: ls -la out

      - name: Deploy site
        if: success() && env.GH_PAT != ''
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          repository-name: r00ters/r00ters.github.io
          branch: main
          folder: ./out/
          git-config-name: ci-cd
          git-config-email: tech@rooters.it
          token: ${{ env.GH_PAT }}
          single-commit: true
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

  telegram-workflow-status:
    if: always()
    name: Post Workflow Status To Telegram
    needs:
      - deploy
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram Notification
        run: |
          STATUS=${{ job.status }}
          MESSAGE="ðŸš€ Workflow *${{ github.workflow }}* su *${{ github.repository }}* ha terminato con stato: *$STATUS* (job: ${{ github.job }})"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode="Markdown" \
            -d text="$MESSAGE"
